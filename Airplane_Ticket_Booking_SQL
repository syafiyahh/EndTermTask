{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/syafiyahh/EndTermTask/blob/main/Airplane_Ticket_Booking_SQL\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2nzS1RWDYvGX"
      },
      "source": [
        "# Pengaksesan SQLite melalui GUI\n",
        "\n",
        "**Graphical User Interface (GUI)** adalah suatu antarmuka yang memungkinkan user berinteraksi melalui elemen atau yang biasa disebut *widgets*.\n",
        "\n",
        "**ipywidgets** merupakan library dalam Python, yang memfasilitasi pembuat notebook Jupyter dan Google Colab dalam menciptakan GUI yang interaktif secara langsung di dalam notebook.\n",
        "\n",
        "* Pada materi hari ini, akan dibahas bagaimana ipywidgets dapat digunakan untuk berinteraksi dengan database SQLite.\n",
        "* Pembahasan dimulai dengan membangun GUI sederhana yang memungkinkan user untuk memasukkan data, seperti memeriksa ketersediaan buku di perpustakaan berdasarkan ID buku. Melalui GUI yang dibuat, pengguna dapat melakukan query ke database dan mendapatkan respons secara real-time tanpa perlu menulis query SQL secara manual."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sqlite3\n",
        "\n",
        "conn = sqlite3.connect('eagleairlines.db')\n",
        "c = conn.cursor()\n",
        "\n",
        "# Mengaktifkan dukungan foreign key\n",
        "c.execute('PRAGMA foreign_keys = ON')\n",
        "\n",
        "c.execute('''CREATE TABLE tiket (\n",
        "             nomor_tiket TEXT PRIMARY KEY,\n",
        "             id_pesawat TEXT,\n",
        "             model_pesawat TEXT,\n",
        "             jarak_tempuh_pesawat INTEGER,\n",
        "             kode_bandara TEXT,\n",
        "             nama_bandara TEXT,\n",
        "             kota_bandara TEXT,\n",
        "             koordinat_bandara NUMBER,\n",
        "             zona_waktu_bandara TEXT,\n",
        "             id_penerbangan INTEGER,\n",
        "             nomor_penerbangan TEXT,\n",
        "             jadwal_keberangkatan DATE,\n",
        "             jadwal_kedatangan DATE,\n",
        "             bandara_keberangkatan TEXT,\n",
        "             bandara_kedatangan TEXT,\n",
        "             status_penerbangan  TEXT,\n",
        "             nomor_kursi TEXT,\n",
        "             kelas_kursi TEXT,\n",
        "             harga_tiket NUMBER,\n",
        "             kode_pemesanan TEXT,\n",
        "             total_harga NUMBER,\n",
        "             FOREIGN KEY (kode_pemesanan) REFERENCES pemesanan (kode_pemesanan)\n",
        "             ON DELETE CASCADE ON UPDATE NO ACTION)''')\n",
        "\n",
        "c.execute('''CREATE TABLE penumpang (\n",
        "             id_penumpang INTEGER PRIMARY KEY,\n",
        "             nama_penumpang TEXT)''')\n",
        "\n",
        "c.execute('''CREATE TABLE pemesanan (\n",
        "             kode_pemesanan STRING PRIMARY KEY,\n",
        "             id_penumpang INTEGER,\n",
        "             nomor_tiket INTEGER,\n",
        "             tanggal_pemesanan DATE,\n",
        "             bandara_keberangkatan STRING,\n",
        "             bandara_kedatangan STRING,\n",
        "             jadwal_keberangkatan DATE REFERENCES tiket (jadwal_keberangkatan),\n",
        "             jadwal_kedatangan DATE REFERENCES tiket (jadwal_kedatangan),\n",
        "             FOREIGN KEY (id_penumpang) REFERENCES penumpang (id_penumpang)\n",
        "             ON DELETE CASCADE ON UPDATE NO ACTION,\n",
        "             FOREIGN KEY (nomor_tiket) REFERENCES tiket (nomor_tiket))''')\n",
        "\n",
        "conn.commit()\n",
        "conn.close()"
      ],
      "metadata": {
        "id": "-1rJJaimsjKr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 73
        },
        "id": "uKnqEgo9J3Qr",
        "outputId": "63095ade-62c9-4451-b4a0-cfa7f982169c"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-90c7368a-00d0-4c47-a2f0-97f9dad2df5b\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-90c7368a-00d0-4c47-a2f0-97f9dad2df5b\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving tiket.csv to tiket.csv\n"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "\n",
        "uploaded = files.upload()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hlMRha31J-8L"
      },
      "outputs": [],
      "source": [
        "import csv\n",
        "\n",
        "MyDB = sqlite3.connect('eagleairlines.db')\n",
        "cursor = MyDB.cursor()\n",
        "\n",
        "with open('tiket.csv', 'r', encoding='latin-1') as berkas_csv:\n",
        "    data_csv = csv.reader(berkas_csv, delimiter=',')\n",
        "    next(data_csv)\n",
        "    data = list(data_csv)\n",
        "    for row in data:\n",
        "        cursor.execute(\"INSERT INTO tiket (nomor_tiket, id_pesawat, model_pesawat, jarak_tempuh_pesawat, kode_bandara, nama_bandara, kota_bandara, koordinat_bandara, zona_waktu_bandara, id_penerbangan, nomor_penerbangan, jadwal_keberangkatan, jadwal_kedatangan, bandara_keberangkatan, bandara_kedatangan, status_penerbangan, nomor_kursi, kelas_kursi, harga_tiket, kode_pemesanan, total_harga) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\", tuple(row))\n",
        "\n",
        "MyDB.commit()\n",
        "MyDB.close()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 73
        },
        "id": "fccHgAEyKC_R",
        "outputId": "34904dd5-f013-4277-e2e2-9b5b9a5e152b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-9865029f-aaa2-457f-875a-409cf12c8d1a\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-9865029f-aaa2-457f-875a-409cf12c8d1a\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving penumpang.csv to penumpang.csv\n"
          ]
        }
      ],
      "source": [
        "from google.colab import files\n",
        "\n",
        "uploaded = files.upload()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "41uy1ewsKRDM"
      },
      "outputs": [],
      "source": [
        "import csv\n",
        "\n",
        "MyDB = sqlite3.connect('eagleairlines.db')\n",
        "cursor = MyDB.cursor()\n",
        "\n",
        "with open('penumpang.csv', 'r') as berkas_csv:\n",
        "    data_csv = csv.reader(berkas_csv, delimiter=',')\n",
        "    next(data_csv)\n",
        "    data = list(data_csv)\n",
        "    for row in data:\n",
        "        cursor.execute(\"INSERT INTO penumpang (id_penumpang, nama_penumpang) VALUES (?, ?)\", tuple(row))\n",
        "\n",
        "MyDB.commit()\n",
        "MyDB.close()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from ipywidgets import Layout, widgets, Style\n",
        "from IPython.display import display\n",
        "from datetime import datetime\n",
        "import sqlite3\n",
        "\n",
        "# Membuat widget input\n",
        "id_penumpang_input = widgets.IntText(\n",
        "    value=0,\n",
        "    description='ID Penumpang:',\n",
        "    disabled=False)\n",
        "\n",
        "nama_penumpang_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Nama Penumpang:',\n",
        "    disabled=False)\n",
        "\n",
        "tanggal_pemesanan_input = widgets.DatePicker(\n",
        "    description='Tanggal Pemesanan:',\n",
        "    disabled=False,\n",
        "    value=datetime.now().date())\n",
        "\n",
        "bandara_keberangkatan_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Bandara Keberangkatan:',\n",
        "    disabled=False)\n",
        "\n",
        "bandara_kedatangan_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Bandara Kedatangan:',\n",
        "    disabled=False)\n",
        "\n",
        "jadwal_keberangkatan_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Jadwal Kedatangan:',\n",
        "    disabled=False)\n",
        "\n",
        "jadwal_kedatangan_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Jadwak Kedatangan:',\n",
        "    disabled=False)\n",
        "\n",
        "# Fungsi untuk mendapatkan tiket yang tersedia berdasarkan bandara\n",
        "def get_available_tickets(bandara_keberangkatan, bandara_kedatangan):\n",
        "    MyDB = sqlite3.connect('eagleairlines.db')\n",
        "    cursor = MyDB.cursor()\n",
        "    cursor.execute(\"\"\"\n",
        "        SELECT bandara_keberangkatan, bandara_kedatangan, jadwal_keberangkatan, jadwal_kedatangan, nomor_kursi, kelas_kursi, harga_tiket, nomor_tiket, kode_pemesanan\n",
        "        FROM tiket\n",
        "        WHERE bandara_keberangkatan = ? AND bandara_kedatangan = ?\n",
        "    \"\"\", (bandara_keberangkatan, bandara_kedatangan))\n",
        "    tickets = cursor.fetchall()\n",
        "    MyDB.close()\n",
        "    return tickets\n",
        "\n",
        "# Fungsi untuk memperbarui dropdown tiket\n",
        "def update_ticket_dropdown(change):\n",
        "    bandara_keberangkatan = bandara_keberangkatan_input.value\n",
        "    bandara_kedatangan = bandara_kedatangan_input.value\n",
        "    tickets = get_available_tickets(bandara_keberangkatan, bandara_kedatangan)\n",
        "    ticket_options = [f\"{ticket[0]} - {ticket[1]} - {ticket[2]} - {ticket[3]} - {ticket[4]} - {ticket[5]} - {ticket[6]} - {ticket[7]} - {ticket[8]}\" for ticket in tickets]\n",
        "    ticket_dropdown.options = ticket_options\n",
        "\n",
        "# Dropdown tiket yang akan diperbarui berdasarkan input pengguna\n",
        "ticket_dropdown = widgets.Dropdown(\n",
        "    options=[],\n",
        "    description='Pilih Tiket:',\n",
        "    disabled=False\n",
        ")\n",
        "\n",
        "# Menghubungkan perubahan input bandara dengan fungsi update\n",
        "bandara_keberangkatan_input.observe(update_ticket_dropdown, names='value')\n",
        "bandara_kedatangan_input.observe(update_ticket_dropdown, names='value')\n",
        "\n",
        "# Fungsi untuk menangani pemesanan\n",
        "def book_ticket(button):\n",
        "    id_penumpang = id_penumpang_input.value\n",
        "    nama_penumpang = nama_penumpang_input.value\n",
        "    tanggal_pemesanan = tanggal_pemesanan_input.value.strftime('%Y-%m-%d')\n",
        "    selected_ticket = ticket_dropdown.value\n",
        "    selected_ticket_split = selected_ticket.split(' - ')\n",
        "    bandara_keberangkatan = selected_ticket_split[0]\n",
        "    bandara_kedatangan = selected_ticket_split[1]\n",
        "    jadwal_keberangkatan = selected_ticket_split[2]\n",
        "    jadwal_kedatangan = selected_ticket_split[3]\n",
        "    nomor_tiket = selected_ticket_split[5]\n",
        "    kode_pemesanan = selected_ticket_split[8]\n",
        "\n",
        "    # Menampilkan detail pemesanan\n",
        "    print(f\"Booking details:\\nID Penumpang: {id_penumpang}\\nNama Penumpang: {nama_penumpang}\\nTanggal: {tanggal_pemesanan}\\nTiket: {selected_ticket}\")\n",
        "\n",
        "    # Menyimpan pemesanan ke database\n",
        "    try:\n",
        "        MyDB = sqlite3.connect('eagleairlines.db')\n",
        "        cursor = MyDB.cursor()\n",
        "        cursor.execute(\"\"\"\n",
        "            INSERT INTO pemesanan (kode_pemesanan, id_penumpang, nomor_tiket, tanggal_pemesanan, bandara_keberangkatan, bandara_kedatangan)\n",
        "            VALUES (?, ?, ?, ?, ?)\n",
        "        \"\"\", (kode_pemesanan, id_penumpang, nomor_tiket, tanggal_pemesanan, bandara_keberangkatan, bandara_kedatangan))\n",
        "        MyDB.commit()\n",
        "        print(\"Pemesanan berhasil disimpan.\")\n",
        "    except Exception as e:\n",
        "        print(\"Terjadi kesalahan: Tiket sudah tidak tersedia\")\n",
        "    finally:\n",
        "        MyDB.close()\n",
        "\n",
        "submit_button = widgets.Button(\n",
        "    description='Masukkan Data',\n",
        "    disabled=False,\n",
        "    button_style='success',\n",
        "    tooltip='Klik untuk memasukkan data pemesanan'\n",
        ")\n",
        "submit_button.on_click(book_ticket)\n",
        "\n",
        "# Menampilkan widget\n",
        "display(id_penumpang_input, nama_penumpang_input, tanggal_pemesanan_input, bandara_keberangkatan_input, bandara_kedatangan_input, ticket_dropdown, submit_button)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 232,
          "referenced_widgets": [
            "67c9ffc1e9b7495b9732b487e934e294",
            "3875c97f63b647809c50c61916495367",
            "70f0bc4f0d65433fbbbb877f947ef5a4",
            "35ad8d30ac354de09afd3d24c5b90f7e",
            "b6ee82037d1f43f698c4e375086b1888",
            "0a8623e84209401db7202a4b0648a4c9",
            "0bfce42cd2a54873933bfdd83d72e604",
            "c4783eae2dc946a3a05ca01ae24fd18a",
            "ea1477e206e44fb88f5b13ecb24c121b",
            "836d6a376d914a3e9a711fd10e3c9267",
            "0356c87fca9347f1ae8a84c5c730add2",
            "dec9fd1c89854a459742ad7ba23e4733",
            "6a4a32a79550431ca81ca64a5e3cfc9d",
            "864d07d10ca543b4add813a825538ed9",
            "b915c3ffa3374e74b9f4cdfe9a6ba2ac",
            "59e49faf55974c66b4b4cc9fe7377299",
            "a81c35e3acb545d39d425143c1bf0139",
            "922130895c644e7db16226f3babb68ae",
            "8bdda8de894b43d19801789ac59f7691",
            "7e3ddd7292794292bcf03ebd4e2da134",
            "b09c774aebe348298cc7c00ea266e836"
          ]
        },
        "id": "ykyE2ugNMhJG",
        "outputId": "5bbc4e60-9845-4db2-92fd-c5da084a2a9c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "IntText(value=0, description='ID Penumpang:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "67c9ffc1e9b7495b9732b487e934e294"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Nama Penumpang:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "35ad8d30ac354de09afd3d24c5b90f7e"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "DatePicker(value=datetime.date(2024, 6, 9), description='Tanggal Pemesanan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "0bfce42cd2a54873933bfdd83d72e604"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Bandara Keberangkatan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "836d6a376d914a3e9a711fd10e3c9267"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Bandara Kedatangan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "6a4a32a79550431ca81ca64a5e3cfc9d"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Pilih Tiket:', options=(), value=None)"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "59e49faf55974c66b4b4cc9fe7377299"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(button_style='success', description='Masukkan Data', style=ButtonStyle(), tooltip='Klik untuk memasukka…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "8bdda8de894b43d19801789ac59f7691"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from ipywidgets import Layout, widgets, Style\n",
        "from IPython.display import display\n",
        "from datetime import datetime\n",
        "import sqlite3\n",
        "\n",
        "# Membuat widget input\n",
        "id_penumpang_input = widgets.IntText(\n",
        "    value=0,\n",
        "    description='ID Penumpang:',\n",
        "    disabled=False)\n",
        "\n",
        "nama_penumpang_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Nama Penumpang:',\n",
        "    disabled=False)\n",
        "\n",
        "tanggal_pemesanan_input = widgets.DatePicker(\n",
        "    description='Tanggal Pemesanan:',\n",
        "    disabled=False,\n",
        "    value=datetime.now().date())\n",
        "\n",
        "bandara_keberangkatan_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Bandara Keberangkatan:',\n",
        "    disabled=False)\n",
        "\n",
        "bandara_kedatangan_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Bandara Kedatangan:',\n",
        "    disabled=False)\n",
        "\n",
        "# Fungsi untuk mendapatkan tiket yang tersedia berdasarkan bandara\n",
        "def get_available_tickets(bandara_keberangkatan, bandara_kedatangan):\n",
        "    MyDB = sqlite3.connect('eagleairlines.db')\n",
        "    cursor = MyDB.cursor()\n",
        "    cursor.execute(\"\"\"\n",
        "        SELECT bandara_keberangkatan, bandara_kedatangan, jadwal_keberangkatan, jadwal_kedatangan, nomor_kursi, kelas_kursi, harga_tiket, nomor_tiket, kode_pemesanan\n",
        "        FROM tiket\n",
        "        WHERE bandara_keberangkatan = ? AND bandara_kedatangan = ?\n",
        "    \"\"\", (bandara_keberangkatan, bandara_kedatangan))\n",
        "    tickets = cursor.fetchall()\n",
        "    print(f\"Queried Tickets: {tickets}\")  # Debugging statement\n",
        "    MyDB.close()\n",
        "    return tickets\n",
        "\n",
        "# Fungsi untuk memperbarui dropdown tiket\n",
        "def update_ticket_dropdown(change):\n",
        "    bandara_keberangkatan = bandara_keberangkatan_input.value\n",
        "    bandara_kedatangan = bandara_kedatangan_input.value\n",
        "    tickets = get_available_tickets(bandara_keberangkatan, bandara_kedatangan)\n",
        "    ticket_options = [f\"{ticket[0]} - {ticket[1]} - {ticket[2]} - {ticket[3]} - {ticket[4]} - {ticket[5]} - {ticket[6]} - {ticket[7]} - {ticket[8]}\" for ticket in tickets]\n",
        "    ticket_dropdown.options = ticket_options\n",
        "\n",
        "# Dropdown tiket yang akan diperbarui berdasarkan input pengguna\n",
        "ticket_dropdown = widgets.Dropdown(\n",
        "    options=[],\n",
        "    description='Pilih Tiket:',\n",
        "    disabled=False\n",
        ")\n",
        "\n",
        "# Menghubungkan perubahan input bandara dengan fungsi update\n",
        "bandara_keberangkatan_input.observe(update_ticket_dropdown, names='value')\n",
        "bandara_kedatangan_input.observe(update_ticket_dropdown, names='value')\n",
        "\n",
        "# Fungsi untuk menangani pemesanan\n",
        "def book_ticket(button):\n",
        "    id_penumpang = id_penumpang_input.value\n",
        "    nama_penumpang = nama_penumpang_input.value\n",
        "    tanggal_pemesanan = tanggal_pemesanan_input.value.strftime('%Y-%m-%d')\n",
        "    selected_ticket = ticket_dropdown.value\n",
        "    if selected_ticket:  # Pastikan tiket dipilih\n",
        "        selected_ticket_split = selected_ticket.split(' - ')\n",
        "        bandara_keberangkatan = selected_ticket_split[0]\n",
        "        bandara_kedatangan = selected_ticket_split[1]\n",
        "        jadwal_keberangkatan = selected_ticket_split[2]\n",
        "        jadwal_kedatangan = selected_ticket_split[3]\n",
        "        nomor_tiket = selected_ticket_split[5]\n",
        "        kode_pemesanan = selected_ticket_split[8]\n",
        "\n",
        "        # Menampilkan detail pemesanan\n",
        "        print(f\"Booking details:\\nID Penumpang: {id_penumpang}\\nNama Penumpang: {nama_penumpang}\\nTanggal: {tanggal_pemesanan}\\nTiket: {selected_ticket}\")\n",
        "\n",
        "        # Menyimpan pemesanan ke database\n",
        "        try:\n",
        "            MyDB = sqlite3.connect('eagleairlines.db')\n",
        "            cursor = MyDB.cursor()\n",
        "            cursor.execute(\"\"\"\n",
        "                INSERT INTO pemesanan (kode_pemesanan, id_penumpang, nomor_tiket, tanggal_pemesanan, bandara_keberangkatan, bandara_kedatangan)\n",
        "                VALUES (?, ?, ?, ?, ?, ?)\n",
        "            \"\"\", (kode_pemesanan, id_penumpang, nomor_tiket, tanggal_pemesanan, bandara_keberangkatan, bandara_kedatangan))\n",
        "            MyDB.commit()\n",
        "            print(\"Pemesanan berhasil disimpan.\")\n",
        "        except Exception as e:\n",
        "            print(\"Terjadi kesalahan: Tiket sudah tidak tersedia\")\n",
        "        finally:\n",
        "            MyDB.close()\n",
        "    else:\n",
        "        print(\"Tidak ada tiket yang dipilih\")\n",
        "\n",
        "submit_button = widgets.Button(\n",
        "    description='Masukkan Data',\n",
        "    disabled=False,\n",
        "    button_style='success',\n",
        "    tooltip='Klik untuk memasukkan data pemesanan'\n",
        ")\n",
        "submit_button.on_click(book_ticket)\n",
        "\n",
        "# Menampilkan widget\n",
        "display(id_penumpang_input, nama_penumpang_input, tanggal_pemesanan_input, bandara_keberangkatan_input, bandara_kedatangan_input, ticket_dropdown, submit_button)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 232,
          "referenced_widgets": [
            "48aecf731f304d908c88e0648e31b0ee",
            "abce0cf9f68e4f239aeffd761fb09561",
            "9f2fac484ff1468184b5d25ddfd77516",
            "269af71fe0f14153bee4938e6b14d133",
            "65b03a989aa34123a814c280650a5b95",
            "fb64d6da543a476fbe184b2c2dd2fd51",
            "1ddada531093417a801de79b8d6a5f5b",
            "b295405273324788863fc32f8d66ac06",
            "eab80018fd1341a5a807e5b348ee8ac5",
            "360ee2243c6441c09aa51e58ff031f2c",
            "c3180df07be6439ea3493c20548ed919",
            "0510b18bc94f458ead82633505312fa2",
            "f060623b6fc0486dad12c73f4a204b97",
            "c0b2e312e96e4235a1c645a44f8f3dd5",
            "470b1708de0b4fe8a1e31de04b5e2f03",
            "53ff333fb3084880af428a225d8836a6",
            "aad0d7b129334810a4092f82da77eae7",
            "8523620fd9a64bba9d4c6cfffefbc9d5",
            "fb11523e1a7f4e9694550a9df01f6cc9",
            "5ebc22c55aba4894ad15db933e00bad5",
            "a922d0e857914d1b8f1b07ed5cbd1b72"
          ]
        },
        "id": "APdV5gj0KjQF",
        "outputId": "477c2963-63e5-498e-e032-01b76d52da57"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "IntText(value=0, description='ID Penumpang:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "48aecf731f304d908c88e0648e31b0ee"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Nama Penumpang:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "269af71fe0f14153bee4938e6b14d133"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "DatePicker(value=datetime.date(2024, 6, 9), description='Tanggal Pemesanan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "1ddada531093417a801de79b8d6a5f5b"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Bandara Keberangkatan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "360ee2243c6441c09aa51e58ff031f2c"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Bandara Kedatangan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "f060623b6fc0486dad12c73f4a204b97"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Pilih Tiket:', options=(), value=None)"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "53ff333fb3084880af428a225d8836a6"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(button_style='success', description='Masukkan Data', style=ButtonStyle(), tooltip='Klik untuk memasukka…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "fb11523e1a7f4e9694550a9df01f6cc9"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from ipywidgets import Layout, widgets, Style\n",
        "from IPython.display import display\n",
        "from datetime import datetime\n",
        "import sqlite3\n",
        "\n",
        "# Membuat widget input\n",
        "id_penumpang_input = widgets.IntText(\n",
        "    value=0,\n",
        "    description='ID Penumpang:',\n",
        "    disabled=False)\n",
        "\n",
        "nama_penumpang_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Nama Penumpang:',\n",
        "    disabled=False)\n",
        "\n",
        "tanggal_pemesanan_input = widgets.DatePicker(\n",
        "    description='Tanggal Pemesanan:',\n",
        "    disabled=False,\n",
        "    value=datetime.now().date())\n",
        "\n",
        "bandara_keberangkatan_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Bandara Keberangkatan:',\n",
        "    disabled=False)\n",
        "\n",
        "bandara_kedatangan_input = widgets.Text(\n",
        "    value='',\n",
        "    description='Bandara Kedatangan:',\n",
        "    disabled=False)\n",
        "\n",
        "# Fungsi untuk mendapatkan tiket yang tersedia berdasarkan bandara\n",
        "def get_available_tickets(bandara_keberangkatan, bandara_kedatangan):\n",
        "    MyDB = sqlite3.connect('eagleairlines.db')\n",
        "    cursor = MyDB.cursor()\n",
        "    cursor.execute(\"\"\"\n",
        "        SELECT bandara_keberangkatan, bandara_kedatangan, jadwal_keberangkatan, jadwal_kedatangan, nomor_kursi, kelas_kursi, harga_tiket, nomor_tiket, kode_pemesanan\n",
        "        FROM tiket\n",
        "        WHERE bandara_keberangkatan = ? AND bandara_kedatangan = ?\n",
        "    \"\"\", (bandara_keberangkatan, bandara_kedatangan))\n",
        "    tickets = cursor.fetchall()\n",
        "    MyDB.close()\n",
        "    return tickets\n",
        "\n",
        "# Fungsi untuk memperbarui dropdown tiket\n",
        "def update_ticket_dropdown(change):\n",
        "    bandara_keberangkatan = bandara_keberangkatan_input.value\n",
        "    bandara_kedatangan = bandara_kedatangan_input.value\n",
        "    tickets = get_available_tickets(bandara_keberangkatan, bandara_kedatangan)\n",
        "    ticket_options = [f\"{ticket[0]} - {ticket[1]} - {ticket[2]} - {ticket[3]} - {ticket[4]} - {ticket[5]} - {ticket[6]} - {ticket[7]} - {ticket[8]}\" for ticket in tickets]\n",
        "    ticket_dropdown.options = ticket_options\n",
        "\n",
        "# Dropdown tiket yang akan diperbarui berdasarkan input pengguna\n",
        "ticket_dropdown = widgets.Dropdown(\n",
        "    options=[],\n",
        "    description='Pilih Tiket:',\n",
        "    disabled=False\n",
        ")\n",
        "\n",
        "# Menghubungkan perubahan input bandara dengan fungsi update\n",
        "bandara_keberangkatan_input.observe(update_ticket_dropdown, names='value')\n",
        "bandara_kedatangan_input.observe(update_ticket_dropdown, names='value')\n",
        "\n",
        "# Fungsi untuk menangani pemesanan\n",
        "def book_ticket(button):\n",
        "    id_penumpang = id_penumpang_input.value\n",
        "    nama_penumpang = nama_penumpang_input.value\n",
        "    tanggal_pemesanan = tanggal_pemesanan_input.value.strftime('%Y-%m-%d')\n",
        "    selected_ticket = ticket_dropdown.value\n",
        "    selected_ticket_split = selected_ticket.split(' - ')\n",
        "    bandara_keberangkatan = selected_ticket_split[0]\n",
        "    bandara_kedatangan = selected_ticket_split[1]\n",
        "    jadwal_keberangkatan = selected_ticket_split[2]\n",
        "    jadwal_kedatangan = selected_ticket_split[3]\n",
        "    nomor_tiket = selected_ticket_split[5]\n",
        "    kode_pemesanan = selected_ticket_split[8]\n",
        "\n",
        "    # Menampilkan detail pemesanan\n",
        "    print(f\"Booking details:\\nID Penumpang: {id_penumpang}\\nNama Penumpang: {nama_penumpang}\\nTanggal: {tanggal_pemesanan}\\nTiket: {selected_ticket}\")\n",
        "\n",
        "    # Menyimpan pemesanan ke database\n",
        "    try:\n",
        "        MyDB = sqlite3.connect('eagleairlines.db')\n",
        "        cursor = MyDB.cursor()\n",
        "        cursor.execute(\"\"\"\n",
        "            INSERT INTO pemesanan (kode_pemesanan, id_penumpang, nomor_tiket, tanggal_pemesanan, bandara_keberangkatan, bandara_kedatangan)\n",
        "            VALUES (?, ?, ?, ?, ?)\n",
        "        \"\"\", (kode_pemesanan, id_penumpang, nomor_tiket, tanggal_pemesanan, bandara_keberangkatan, bandara_kedatangan))\n",
        "        MyDB.commit()\n",
        "        print(\"Pemesanan berhasil disimpan.\")\n",
        "    except Exception as e:\n",
        "        print(\"Terjadi kesalahan: Tiket sudah tidak tersedia\")\n",
        "    finally:\n",
        "        MyDB.close()\n",
        "\n",
        "submit_button = widgets.Button(\n",
        "    description='Masukkan Data',\n",
        "    disabled=False,\n",
        "    button_style='success',\n",
        "    tooltip='Klik untuk memasukkan data pemesanan'\n",
        ")\n",
        "submit_button.on_click(book_ticket)\n",
        "\n",
        "# Menampilkan widget\n",
        "display(id_penumpang_input, nama_penumpang_input, tanggal_pemesanan_input, bandara_keberangkatan_input, bandara_kedatangan_input, ticket_dropdown, submit_button)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 336,
          "referenced_widgets": [
            "8a7865c576df41ebbe7004a0c3ad778e",
            "1bfdf74810d7472da62bd8a28fc9eb04",
            "44d7d2e7b73b44a3b88126ac69b4602e",
            "0096908ba1ae460ca877fad854ef0975",
            "5a257e90fc9d4cfc9924414d4d6380a0",
            "31909e554b8f468f93c560914157900e",
            "0c3700e4dec64973a06f97de09702c56",
            "db154f6a21334922acc738e035a80b76",
            "d670557b6e694104807a4277ad8d96df",
            "7741749d9c8b460da51a06f5ec93a2d3",
            "1a7a10b5bde347cba85b168fd97bc16d",
            "e3f9ef54987941abadf69032aa18014a",
            "9841a8a8b2c64592a8d4743fd2ebf83b",
            "b8a37e28abda42aca3fe7f3a44c6f2e9",
            "1ca4d7f9395849ae9e429eeea674b63d",
            "81845fde63eb4b18aad6c65e51d03656",
            "7c452dfb84b14301a9d3fa85cd8b2f4d",
            "286a5f9a5c294aa68f25e0f2d04f6c29",
            "a7849739b4194a019438949cf4eeae75",
            "be81de5d1d834568a5c86d1ace733474",
            "05aa22d4425b4a90bb906634aaf25127"
          ]
        },
        "id": "qClbK4nJK0JN",
        "outputId": "9e674e40-d8a2-4ae6-9014-59d0fad3f317"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "IntText(value=0, description='ID Penumpang:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "8a7865c576df41ebbe7004a0c3ad778e"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Nama Penumpang:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "0096908ba1ae460ca877fad854ef0975"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "DatePicker(value=datetime.date(2024, 6, 5), description='Tanggal Pemesanan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "0c3700e4dec64973a06f97de09702c56"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Bandara Keberangkatan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "7741749d9c8b460da51a06f5ec93a2d3"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='', description='Bandara Kedatangan:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "9841a8a8b2c64592a8d4743fd2ebf83b"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Pilih Tiket:', options=(), value=None)"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "81845fde63eb4b18aad6c65e51d03656"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(button_style='success', description='Masukkan Data', style=ButtonStyle(), tooltip='Klik untuk memasukka…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "a7849739b4194a019438949cf4eeae75"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Booking details:\n",
            "ID Penumpang: 1088319424\n",
            "Nama Penumpang: Renata\n",
            "Tanggal: 2024-06-05\n",
            "Tiket: SVO - OVB - 2024-08-08 11:45:00+03 - 2024-08-08 15:10:00+03 - 2D - Business - 84,000.00 - 0005434558332 - 9E4CF3\n",
            "Terjadi kesalahan: Tiket sudah tidak tersedia\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 100
        },
        "id": "bUmOaMVnP8wy",
        "outputId": "adac10c0-ea8f-46cb-c644-8dc9d127239c"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  kode_pemesanan  id_penumpang nomor_tiket tanggal_pemesanan  \\\n",
              "0         6571DB    4170220203    Business        2024-06-05   \n",
              "\n",
              "  bandara_keberangkatan bandara_kedatangan jadwal_keberangkatan  \\\n",
              "0                   VKO                PEE                 None   \n",
              "\n",
              "  jadwal_kedatangan  \n",
              "0              None  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-30424ee6-d3a8-4273-b0b4-02f2929f64a0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>kode_pemesanan</th>\n",
              "      <th>id_penumpang</th>\n",
              "      <th>nomor_tiket</th>\n",
              "      <th>tanggal_pemesanan</th>\n",
              "      <th>bandara_keberangkatan</th>\n",
              "      <th>bandara_kedatangan</th>\n",
              "      <th>jadwal_keberangkatan</th>\n",
              "      <th>jadwal_kedatangan</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6571DB</td>\n",
              "      <td>4170220203</td>\n",
              "      <td>Business</td>\n",
              "      <td>2024-06-05</td>\n",
              "      <td>VKO</td>\n",
              "      <td>PEE</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30424ee6-d3a8-4273-b0b4-02f2929f64a0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-30424ee6-d3a8-4273-b0b4-02f2929f64a0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-30424ee6-d3a8-4273-b0b4-02f2929f64a0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "repr_error": "Out of range float values are not JSON compliant: nan"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "def display_pemesanan():\n",
        "    try:\n",
        "        MyDB = sqlite3.connect('eagleairlines.db')\n",
        "        cursor = MyDB.cursor()\n",
        "        cursor.execute(\"SELECT * FROM pemesanan\")\n",
        "        rows = cursor.fetchall()\n",
        "        MyDB.close()\n",
        "\n",
        "        # Menampilkan data sebagai DataFrame\n",
        "        df = pd.DataFrame(rows, columns=[ 'kode_pemesanan', 'id_penumpang', 'nomor_tiket', 'tanggal_pemesanan', 'bandara_keberangkatan', 'bandara_kedatangan','jadwal_keberangkatan', 'jadwal_kedatangan'])\n",
        "        display(df)\n",
        "    except Exception as e:\n",
        "        print(\"Terjadi kesalahan:\", e)\n",
        "\n",
        "# Memanggil fungsi untuk menampilkan tabel pemesanan\n",
        "display_pemesanan()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "def display_informasi_pemesanan():\n",
        "    try:\n",
        "        MyDB = sqlite3.connect('eagleairlines.db')\n",
        "        cursor = MyDB.cursor()\n",
        "        cursor.execute(\"SELECT * FROM pemesanan\")\n",
        "        rows = cursor.fetchall()\n",
        "        MyDB.close()\n",
        "\n",
        "        # Menampilkan data sebagai DataFrame\n",
        "        df = pd.DataFrame(rows, columns=['kode_pemesanan', 'id_penumpang', 'nomor_tiket', 'tanggal_pemesanan', 'bandara_keberangkatan', 'bandara_kedatangan'])\n",
        "        display(df)\n",
        "    except Exception as e:\n",
        "        print(\"Terjadi kesalahan:\", e)\n",
        "\n",
        "# Memanggil fungsi untuk menampilkan tabel pemesanan\n",
        "display_pemesanan()"
      ],
      "metadata": {
        "id": "2AeAHSxbZm5k"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "o4qeNI5vj_3a"
      },
      "source": [
        "## Lakukan praktik simulasi dengan cara menambah entri ke dalam tabel peminjaman."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FiGmW4QvrnSw"
      },
      "source": [
        "## Berdasarkan data dalam tabel peminjaman, hitung durasi peminjaman buku (selisih antara tanggal_kembali dan tanggal_pinjam):\n",
        "\n",
        "* Tuliskan sebuah query SQL untuk menghitung durasi peminjaman setiap buku\n",
        "dalam hari. Gunakan julianday (fungsi bawaan pada SQLite).\n",
        "* Gunakan pandas untuk menganalisis durasi rata-rata peminjaman buku dan durasi peminjaman maksimum dan minimum."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Menghitung durasi peminjaman setiap buku dalam hari\n",
        "\n",
        "conn = sqlite3.connect('perpustakaan.db')\n",
        "cursor = conn.cursor()\n",
        "\n",
        "#Query SQL untuk menghitung durasi peminjaman setiap buku dalam hari\n",
        "query = \"\"\"\n",
        "    SELECT\n",
        "        id_buku,\n",
        "        julianday(tanggal_kembali) - julianday(tanggal_pinjam) AS durasi_peminjaman_hari\n",
        "    FROM\n",
        "        peminjaman;\n",
        "\"\"\"\n",
        "\n",
        "#Menjalankan query\n",
        "cursor.execute(query)\n",
        "\n",
        "#Mendapatkan hasil query\n",
        "durasi_pinjam = cursor.fetchall()\n",
        "\n",
        "conn.close()\n",
        "\n",
        "#Menampilkan hasil\n",
        "for row in durasi_pinjam:\n",
        "    print(\"ID Buku:\", row[0])\n",
        "    print(\"Durasi Peminjaman (hari):\", row[1])\n",
        "    print()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SjaBFxkMHa6T",
        "outputId": "7f24e58b-aa06-4b37-c680-7b88e23161ea"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ID Buku: 1\n",
            "Durasi Peminjaman (hari): 6.850982742849737\n",
            "\n",
            "ID Buku: 5\n",
            "Durasi Peminjaman (hari): 7.0\n",
            "\n",
            "ID Buku: 9\n",
            "Durasi Peminjaman (hari): 7.0\n",
            "\n",
            "ID Buku: 13\n",
            "Durasi Peminjaman (hari): 7.0\n",
            "\n",
            "ID Buku: 16\n",
            "Durasi Peminjaman (hari): 7.0\n",
            "\n",
            "ID Buku: 20\n",
            "Durasi Peminjaman (hari): 7.0\n",
            "\n",
            "ID Buku: 23\n",
            "Durasi Peminjaman (hari): 4.0\n",
            "\n",
            "ID Buku: 11\n",
            "Durasi Peminjaman (hari): 12.0\n",
            "\n",
            "ID Buku: 15\n",
            "Durasi Peminjaman (hari): 5.0\n",
            "\n",
            "ID Buku: 28\n",
            "Durasi Peminjaman (hari): 14.0\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "conn = sqlite3.connect('perpustakaan.db')\n",
        "\n",
        "#Membaca data dari tabel peminjaman\n",
        "query = \"SELECT id_buku, julianday(tanggal_kembali) - julianday(tanggal_pinjam) AS durasi_peminjaman FROM peminjaman;\"\n",
        "df = pd.read_sql_query(query, conn)\n",
        "\n",
        "#Menampilkan durasi peminjaman rata-rata, maksimum, dan minimum\n",
        "durasi_rata_rata = df['durasi_peminjaman'].mean()\n",
        "durasi_peminjaman_maksimum = df['durasi_peminjaman'].max()\n",
        "durasi_peminjaman_minimum = df['durasi_peminjaman'].min()\n",
        "\n",
        "print(\"Durasi Peminjaman Rata-rata:\", durasi_rata_rata, \"hari\")\n",
        "print(\"Durasi Peminjaman Maksimum:\", durasi_peminjaman_maksimum, \"hari\")\n",
        "print(\"Durasi Peminjaman Minimum:\", durasi_peminjaman_minimum, \"hari\")\n",
        "\n",
        "conn.close()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UZoiVTZgHowL",
        "outputId": "0c0ba791-26f2-4587-b1b9-a9a7aa4c307f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Durasi Peminjaman Rata-rata: 7.685098274284973 hari\n",
            "Durasi Peminjaman Maksimum: 14.0 hari\n",
            "Durasi Peminjaman Minimum: 4.0 hari\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "8a7865c576df41ebbe7004a0c3ad778e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntTextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "IntTextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "IntTextView",
            "continuous_update": false,
            "description": "ID Penumpang:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_1bfdf74810d7472da62bd8a28fc9eb04",
            "step": 1,
            "style": "IPY_MODEL_44d7d2e7b73b44a3b88126ac69b4602e",
            "value": 1088319424
          }
        },
        "1bfdf74810d7472da62bd8a28fc9eb04": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "44d7d2e7b73b44a3b88126ac69b4602e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "0096908ba1ae460ca877fad854ef0975": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Nama Penumpang:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_5a257e90fc9d4cfc9924414d4d6380a0",
            "placeholder": "​",
            "style": "IPY_MODEL_31909e554b8f468f93c560914157900e",
            "value": "Renata"
          }
        },
        "5a257e90fc9d4cfc9924414d4d6380a0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "31909e554b8f468f93c560914157900e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "0c3700e4dec64973a06f97de09702c56": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DatePickerModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DatePickerModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DatePickerView",
            "description": "Tanggal Pemesanan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_db154f6a21334922acc738e035a80b76",
            "style": "IPY_MODEL_d670557b6e694104807a4277ad8d96df",
            "value": {
              "year": 2024,
              "month": 5,
              "date": 5
            }
          }
        },
        "db154f6a21334922acc738e035a80b76": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d670557b6e694104807a4277ad8d96df": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "7741749d9c8b460da51a06f5ec93a2d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Bandara Keberangkatan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_1a7a10b5bde347cba85b168fd97bc16d",
            "placeholder": "​",
            "style": "IPY_MODEL_e3f9ef54987941abadf69032aa18014a",
            "value": "SVO"
          }
        },
        "1a7a10b5bde347cba85b168fd97bc16d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e3f9ef54987941abadf69032aa18014a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "9841a8a8b2c64592a8d4743fd2ebf83b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Bandara Kedatangan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_b8a37e28abda42aca3fe7f3a44c6f2e9",
            "placeholder": "​",
            "style": "IPY_MODEL_1ca4d7f9395849ae9e429eeea674b63d",
            "value": "OVB"
          }
        },
        "b8a37e28abda42aca3fe7f3a44c6f2e9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "1ca4d7f9395849ae9e429eeea674b63d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "81845fde63eb4b18aad6c65e51d03656": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "SVO - OVB - 2024-07-27 11:45:00+03 - 2024-07-27 15:10:00+03 - 1A - Business - 84,000.00 - 0005435372505 - F1F276",
              "SVO - OVB - 2024-08-08 11:45:00+03 - 2024-08-08 15:10:00+03 - 2D - Business - 84,000.00 - 0005434558332 - 9E4CF3"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Pilih Tiket:",
            "description_tooltip": null,
            "disabled": false,
            "index": 1,
            "layout": "IPY_MODEL_7c452dfb84b14301a9d3fa85cd8b2f4d",
            "style": "IPY_MODEL_286a5f9a5c294aa68f25e0f2d04f6c29"
          }
        },
        "7c452dfb84b14301a9d3fa85cd8b2f4d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "286a5f9a5c294aa68f25e0f2d04f6c29": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "a7849739b4194a019438949cf4eeae75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "success",
            "description": "Masukkan Data",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_be81de5d1d834568a5c86d1ace733474",
            "style": "IPY_MODEL_05aa22d4425b4a90bb906634aaf25127",
            "tooltip": "Klik untuk memasukkan data pemesanan"
          }
        },
        "be81de5d1d834568a5c86d1ace733474": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "05aa22d4425b4a90bb906634aaf25127": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "67c9ffc1e9b7495b9732b487e934e294": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntTextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "IntTextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "IntTextView",
            "continuous_update": false,
            "description": "ID Penumpang:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_3875c97f63b647809c50c61916495367",
            "step": 1,
            "style": "IPY_MODEL_70f0bc4f0d65433fbbbb877f947ef5a4",
            "value": 0
          }
        },
        "3875c97f63b647809c50c61916495367": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "70f0bc4f0d65433fbbbb877f947ef5a4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "35ad8d30ac354de09afd3d24c5b90f7e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Nama Penumpang:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_b6ee82037d1f43f698c4e375086b1888",
            "placeholder": "​",
            "style": "IPY_MODEL_0a8623e84209401db7202a4b0648a4c9",
            "value": ""
          }
        },
        "b6ee82037d1f43f698c4e375086b1888": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "0a8623e84209401db7202a4b0648a4c9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "0bfce42cd2a54873933bfdd83d72e604": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DatePickerModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DatePickerModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DatePickerView",
            "description": "Tanggal Pemesanan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_c4783eae2dc946a3a05ca01ae24fd18a",
            "style": "IPY_MODEL_ea1477e206e44fb88f5b13ecb24c121b",
            "value": {
              "year": 2024,
              "month": 5,
              "date": 9
            }
          }
        },
        "c4783eae2dc946a3a05ca01ae24fd18a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "ea1477e206e44fb88f5b13ecb24c121b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "836d6a376d914a3e9a711fd10e3c9267": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Bandara Keberangkatan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_0356c87fca9347f1ae8a84c5c730add2",
            "placeholder": "​",
            "style": "IPY_MODEL_dec9fd1c89854a459742ad7ba23e4733",
            "value": ""
          }
        },
        "0356c87fca9347f1ae8a84c5c730add2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "dec9fd1c89854a459742ad7ba23e4733": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "6a4a32a79550431ca81ca64a5e3cfc9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Bandara Kedatangan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_864d07d10ca543b4add813a825538ed9",
            "placeholder": "​",
            "style": "IPY_MODEL_b915c3ffa3374e74b9f4cdfe9a6ba2ac",
            "value": ""
          }
        },
        "864d07d10ca543b4add813a825538ed9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b915c3ffa3374e74b9f4cdfe9a6ba2ac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "59e49faf55974c66b4b4cc9fe7377299": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Pilih Tiket:",
            "description_tooltip": null,
            "disabled": false,
            "index": null,
            "layout": "IPY_MODEL_a81c35e3acb545d39d425143c1bf0139",
            "style": "IPY_MODEL_922130895c644e7db16226f3babb68ae"
          }
        },
        "a81c35e3acb545d39d425143c1bf0139": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "922130895c644e7db16226f3babb68ae": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "8bdda8de894b43d19801789ac59f7691": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "success",
            "description": "Masukkan Data",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_7e3ddd7292794292bcf03ebd4e2da134",
            "style": "IPY_MODEL_b09c774aebe348298cc7c00ea266e836",
            "tooltip": "Klik untuk memasukkan data pemesanan"
          }
        },
        "7e3ddd7292794292bcf03ebd4e2da134": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b09c774aebe348298cc7c00ea266e836": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "48aecf731f304d908c88e0648e31b0ee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntTextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "IntTextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "IntTextView",
            "continuous_update": false,
            "description": "ID Penumpang:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_abce0cf9f68e4f239aeffd761fb09561",
            "step": 1,
            "style": "IPY_MODEL_9f2fac484ff1468184b5d25ddfd77516",
            "value": 0
          }
        },
        "abce0cf9f68e4f239aeffd761fb09561": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9f2fac484ff1468184b5d25ddfd77516": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "269af71fe0f14153bee4938e6b14d133": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Nama Penumpang:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_65b03a989aa34123a814c280650a5b95",
            "placeholder": "​",
            "style": "IPY_MODEL_fb64d6da543a476fbe184b2c2dd2fd51",
            "value": ""
          }
        },
        "65b03a989aa34123a814c280650a5b95": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "fb64d6da543a476fbe184b2c2dd2fd51": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "1ddada531093417a801de79b8d6a5f5b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DatePickerModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DatePickerModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DatePickerView",
            "description": "Tanggal Pemesanan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_b295405273324788863fc32f8d66ac06",
            "style": "IPY_MODEL_eab80018fd1341a5a807e5b348ee8ac5",
            "value": {
              "year": 2024,
              "month": 5,
              "date": 9
            }
          }
        },
        "b295405273324788863fc32f8d66ac06": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "eab80018fd1341a5a807e5b348ee8ac5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "360ee2243c6441c09aa51e58ff031f2c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Bandara Keberangkatan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_c3180df07be6439ea3493c20548ed919",
            "placeholder": "​",
            "style": "IPY_MODEL_0510b18bc94f458ead82633505312fa2",
            "value": ""
          }
        },
        "c3180df07be6439ea3493c20548ed919": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "0510b18bc94f458ead82633505312fa2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f060623b6fc0486dad12c73f4a204b97": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Bandara Kedatangan:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_c0b2e312e96e4235a1c645a44f8f3dd5",
            "placeholder": "​",
            "style": "IPY_MODEL_470b1708de0b4fe8a1e31de04b5e2f03",
            "value": ""
          }
        },
        "c0b2e312e96e4235a1c645a44f8f3dd5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "470b1708de0b4fe8a1e31de04b5e2f03": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "53ff333fb3084880af428a225d8836a6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Pilih Tiket:",
            "description_tooltip": null,
            "disabled": false,
            "index": null,
            "layout": "IPY_MODEL_aad0d7b129334810a4092f82da77eae7",
            "style": "IPY_MODEL_8523620fd9a64bba9d4c6cfffefbc9d5"
          }
        },
        "aad0d7b129334810a4092f82da77eae7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8523620fd9a64bba9d4c6cfffefbc9d5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "fb11523e1a7f4e9694550a9df01f6cc9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "success",
            "description": "Masukkan Data",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_5ebc22c55aba4894ad15db933e00bad5",
            "style": "IPY_MODEL_a922d0e857914d1b8f1b07ed5cbd1b72",
            "tooltip": "Klik untuk memasukkan data pemesanan"
          }
        },
        "5ebc22c55aba4894ad15db933e00bad5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "a922d0e857914d1b8f1b07ed5cbd1b72": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}